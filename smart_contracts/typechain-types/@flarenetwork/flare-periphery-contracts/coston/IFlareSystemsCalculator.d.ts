/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface IFlareSystemsCalculatorContract
  extends Truffle.Contract<IFlareSystemsCalculatorInstance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<IFlareSystemsCalculatorInstance>;
}

export interface VoterRegistrationInfo {
  name: "VoterRegistrationInfo";
  args: {
    voter: string;
    rewardEpochId: BN;
    delegationAddress: string;
    delegationFeeBIPS: BN;
    wNatWeight: BN;
    wNatCappedWeight: BN;
    nodeIds: string[];
    nodeWeights: BN[];
    0: string;
    1: BN;
    2: string;
    3: BN;
    4: BN;
    5: BN;
    6: string[];
    7: BN[];
  };
}

type AllEvents = VoterRegistrationInfo;

export interface IFlareSystemsCalculatorInstance
  extends Truffle.ContractInstance {
  signingPolicySignNoRewardsDurationBlocks(
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  signingPolicySignNonPunishableDurationBlocks(
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  signingPolicySignNonPunishableDurationSeconds(
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  wNatCapPPM(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  methods: {
    signingPolicySignNoRewardsDurationBlocks(
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    signingPolicySignNonPunishableDurationBlocks(
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    signingPolicySignNonPunishableDurationSeconds(
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    wNatCapPPM(txDetails?: Truffle.TransactionDetails): Promise<BN>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
