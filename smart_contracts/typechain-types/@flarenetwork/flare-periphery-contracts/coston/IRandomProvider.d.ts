/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface IRandomProviderContract
  extends Truffle.Contract<IRandomProviderInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<IRandomProviderInstance>;
}

type AllEvents = never;

export interface IRandomProviderInstance extends Truffle.ContractInstance {
  getCurrentRandom(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  getCurrentRandomWithQuality(
    txDetails?: Truffle.TransactionDetails
  ): Promise<{ 0: BN; 1: boolean }>;

  getCurrentRandomWithQualityAndTimestamp(
    txDetails?: Truffle.TransactionDetails
  ): Promise<{ 0: BN; 1: boolean; 2: BN }>;

  methods: {
    getCurrentRandom(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    getCurrentRandomWithQuality(
      txDetails?: Truffle.TransactionDetails
    ): Promise<{ 0: BN; 1: boolean }>;

    getCurrentRandomWithQualityAndTimestamp(
      txDetails?: Truffle.TransactionDetails
    ): Promise<{ 0: BN; 1: boolean; 2: BN }>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
