/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface ProtocolsV2InterfaceContract
  extends Truffle.Contract<ProtocolsV2InterfaceInstance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<ProtocolsV2InterfaceInstance>;
}

type AllEvents = never;

export interface ProtocolsV2InterfaceInstance extends Truffle.ContractInstance {
  firstRewardEpochStartTs(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  firstVotingRoundStartTs(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  getCurrentRewardEpochId(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  getCurrentVotingEpochId(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  getStartVotingRoundId(
    _rewardEpochId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getVotePowerBlock(
    _rewardEpochId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  rewardEpochDurationSeconds(
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  votingEpochDurationSeconds(
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  methods: {
    firstRewardEpochStartTs(
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    firstVotingRoundStartTs(
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getCurrentRewardEpochId(
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getCurrentVotingEpochId(
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getStartVotingRoundId(
      _rewardEpochId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getVotePowerBlock(
      _rewardEpochId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    rewardEpochDurationSeconds(
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    votingEpochDurationSeconds(
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
