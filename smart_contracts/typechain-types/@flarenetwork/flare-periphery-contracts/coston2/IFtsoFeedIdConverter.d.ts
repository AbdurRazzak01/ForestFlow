/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface IFtsoFeedIdConverterContract
  extends Truffle.Contract<IFtsoFeedIdConverterInstance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<IFtsoFeedIdConverterInstance>;
}

type AllEvents = never;

export interface IFtsoFeedIdConverterInstance extends Truffle.ContractInstance {
  getFeedCategoryAndName(
    _feedId: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<{ 0: BN; 1: string }>;

  getFeedId(
    _category: number | BN | string,
    _name: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  methods: {
    getFeedCategoryAndName(
      _feedId: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<{ 0: BN; 1: string }>;

    getFeedId(
      _category: number | BN | string,
      _name: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
